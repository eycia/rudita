
┌────────────────────────────────────────────────┐┌───────┐
│                     POLLER                     ││       │
│┌───────┐┌─────────────┐┌──────────┐┌──────────┐││       │
││LOGFILE││METRIC AS LOG││SCRIPT LOG││API RESULT│││       │
│└───────┘└─────────────┘└──────────┘└──────────┘││       │
│┌────┐┌───────┐┌──────────┐┌───────┐            ││       │
││TAIL││RSYSLOG││LISTEN DIR││...    │            ││       │
│└────┘└───────┘└──────────┘└───────┘            ││       │
└────────────────────────────────────────────────┘│       │
┌────────────────────────────────────────────────┐│ AGENT │
│               PARSER FOR LOGFORMAT             ││       │
└────────────────────────────────────────────────┘│       │
┌────────────────────────────────────────────────┐│       │
│                EXECUTOR FOR XXQL               ││       │
└────────────────────────────────────────────────┘│       │
┌────────────────────────────────────────────────┐│       │
│               SENDER AS GRPC/THRIFT            ││       │                        ┌───────┐
└────────────────────────────────────────────────┘└───────┘                        │SOURCE │
                                                                                   └───┬───┘
───────────────────────────────────────────────────────────────────────────────────────┼────────────────────────────────────────────────────────────────────────────────────────────────────────
                                                                              ┌────────┼────────┐
┌────────────────────────────────────────────────┐┌───────┐               ┌───┴───┐┌───┴───┐┌───┴───┐
│               SOURCE SAME AS SENDER            ││SOURCE │               │SOURCE ││SOURCE ││SOURCE │
└────────────────────────────────────────────────┘└───────┘               └───┬───┘└───┬───┘└───┬───┘
                                                                              ├────────┼────────┤
┌────────────────────────────────────────────────┐┌───────┐               ┌───┴───┐┌───┴───┐┌───┴───┐
│                 AGGREGATE USE XXQL             ││ AGGRE │               │ AGGRE ││ AGGRE ││ AGGRE │
└────────────────────────────────────────────────┘└───────┘               └───┬───┘└───┬───┘└───┬───┘
┌────────────────────────────────────────────────┐┌───────┐               ┌───┴───┐┌───┴───┐┌───┴───┐
│                SINK LIKE WS, KAFKA...          ││  SINK │               │  SINK ││  SINK ││  SINK │
└────────────────────────────────────────────────┘└───────┘               └───────┘└───────┘└───────┘


// like sql:
//  select group_by_aggr, group_by_field... from (
//        select expr1 as as1
//               expr2 as as2                            <--------------rewrite
//        from xxxxxxx                                   <--------------parse
//        where where1                                   <--------------filter1
//  ) where where2                                       <--------------filter2
//  group by group_by_field..., time(expr, by)           <--------------aggr
//  having                                               <--------------filter3
//
// | parse   : []byte => map[string]interface{}
// | filter1 :
// | rewrite : map[string]interface{} => map[string]interface{} // every tag rewrite here(include time), some value rewire here
// | filter2 :
// | aggr    : map[string]interface{} -> reduce(tagKey []string, apply func(valueKey)func(sum, new)newsum) -> (tag map[string]interface{}, value map[string]interface{})
//                    // do value reduce here, time and tags are fixed, not allow rewrite here
// | filter3
// v